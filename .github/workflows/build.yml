name: Build
on:
  push:
    paths:
      - 'setup.py'
      - 'setup.cfg'
      - 'PKG-INFO'
      - 'thatlib/*.*'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.yaml'
      - '.gitignore'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-latest, windows-latest]  # Mac too slow in CI.
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: '1.4.8'
        no-color: true  # --noColor

    - name: Set Environment Variables
      uses: allenevans/set-env@v2.0.0
      with:
        PACKAGE_NAME:          "thatlib"
        MAIN_MODULE:           "thatlib/thatlibcore.nim"
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true


    - name: Nimble
      run: |
        nimble -y refresh
        nimble -y install nimpy


    - uses: juancarlospaco/nimpretty-action@main
      with:
        folders: "thatlib"


    - name: Generate Documentation (Linux)
      if: runner.os == 'Linux'
      run: nim doc --out:docs/index.html ${{ env.MAIN_MODULE }}


    - name: Compile (Unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: nim c --app:lib --gc:arc --experimental:strictFuncs --out:$PACKAGE_NAME.so $MAIN_MODULE


    - name: Compile (Windows)
      if: runner.os == 'Windows'
      run: nim c --app:lib --gc:arc --experimental:strictFuncs --out:${{ env.PACKAGE_NAME }}.pyd ${{ env.MAIN_MODULE }}


    - name: PIP install via Nimporter
      run: |
        git clone https://github.com/Pebaz/nimporter.git
        cd nimporter/
        git checkout nimporter-v2.0.0rc
        python setup.py install
        cd
        rm --force --recursive nimporter/
        python setup.py install
